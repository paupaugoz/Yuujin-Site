{"version":3,"sources":["components/hero/HeroPicture.js","components/hero/Hero.js","components/body/NavBody.js","components/body/Body.js","App.js","serviceWorker.js","index.js"],"names":["HeroPicture","react_default","a","createElement","className","src","href","Component","Hero","id","HeroPicture_HeroPicture","NavBody","Navbar","collapseOnSelect","expand","variant","Brand","Toggle","aria-controls","Collapse","Nav","Link","Body","Fade_default","left","right","Button_default","App","lib_default","style","color","backgroundColor","topOffset","NavBody_NavBody","Hero_Hero","Body_Body","Boolean","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"iTAIqBA,0LAGjB,OAEFC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,0BAGbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,IAAI,wBAC9BJ,EAAAC,EAAAC,cAAA,OAAKC,UAAU,sBAEXH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,kCACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,oDAGFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAEdH,EAAAC,EAAAC,cAAA,KAAGG,KAAK,SAAR,IAAiBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBAjBAG,cCDpBC,mLAGjB,OACJP,EAAAC,EAAAC,cAAA,OAAKM,GAAG,kBACNR,EAAAC,EAAAC,cAAA,cAEEF,EAAAC,EAAAC,cAACO,EAAD,eAP8BH,4DCCbI,0LAIjB,OAEFV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yBACbH,EAAAC,EAAAC,cAAA,cACAF,EAAAC,EAAAC,cAACS,EAAA,EAAD,CAASC,kBAAgB,EAACC,OAAO,KAAMC,QAAQ,QAC7Cd,EAAAC,EAAAC,cAACS,EAAA,EAAOI,MAAR,CAAcV,KAAK,mBAAkBL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aAAaC,IAAI,oBACrEJ,EAAAC,EAAAC,cAACS,EAAA,EAAOK,OAAR,CAAeC,gBAAc,0BAC/BjB,EAAAC,EAAAC,cAACS,EAAA,EAAOO,SAAR,CAAiBV,GAAG,yBACpBR,EAAAC,EAAAC,cAACiB,EAAA,EAAD,MAIAnB,EAAAC,EAAAC,cAACiB,EAAA,EAAD,KACEnB,EAAAC,EAAAC,cAACiB,EAAA,EAAIC,KAAL,CAAUjB,UAAU,cAAcE,KAAK,SAAvC,cACAL,EAAAC,EAAAC,cAACiB,EAAA,EAAIC,KAAL,CAAUjB,UAAU,cAAcE,KAAK,SAAvC,YACAL,EAAAC,EAAAC,cAACiB,EAAA,EAAIC,KAAL,CAAUjB,UAAU,cAAcE,KAAK,SAAvC,wBAnB+BC,+BCEhBe,mLAIjB,OAEFrB,EAAAC,EAAAC,cAAA,OAAKM,GAAG,aACNR,EAAAC,EAAAC,cAAA,WAASC,UAAU,eAChBH,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAMsB,MAAI,GACXvB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,iBACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAAeC,IAAI,sBAGpCJ,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,CAAMuB,OAAK,GACXxB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,8EACAF,EAAAC,EAAAC,cAACuB,EAAAxB,EAAD,CAAQa,QAAQ,mBAAhB,0BAhB0BR,8BCmCnBoB,MA9Bf,WAME,OACE1B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACdH,EAAAC,EAAAC,cAACoB,EAAArB,EAAD,KACCD,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACyB,EAAA1B,EAAD,CAAQ2B,MATG,CACjBC,MAAO,QACPC,gBAAiB,iBAOcC,UAAW,KAClC/B,EAAAC,EAAAC,cAAC8B,EAAD,QAIJhC,EAAAC,EAAAC,cAAC+B,EAAD,OAMEjC,EAAAC,EAAAC,cAACgC,EAAD,QCpBYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAOzC,EAAAC,EAAAC,cAACwC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.6318704c.chunk.js","sourcesContent":["import React, { Component } from 'react'\r\nimport './Hero.css';\r\n\r\n\r\nexport default class HeroPicture extends Component {\r\n\r\nrender() {\r\n    return ( \r\n\r\n  <div className=\"hero-picture-container\">\r\n    \r\n   \r\n    <img className=\"hero-image\" src=\"yuujin_bar_1080.jpg\"/>\r\n      <div className=\"hero-image-wrapper\">\r\n        \r\n          <h1 className=\"hero-image-text\">Yuujin: A Gathering of Friends</h1>\r\n          <h2 className=\"hero-image-text\">Serving Authentic Japanese Cuisine for 14 Years</h2>\r\n       \r\n      </div>\r\n        <div className=\"arrow-container\">\r\n\r\n         <a href=\"#test\"> <div className=\"arrow\"></div></a>\r\n        </div>\r\n \r\n  </div>\r\n \r\n\r\n    )\r\n  }\r\n}\r\n","import React, { Component } from 'react'\r\nimport './Hero.css';\r\nimport HeroPicture from './HeroPicture';\r\nexport default class Hero extends Component {\r\n\r\n  render() {\r\n    return (\r\n<div id=\"hero-container\">\r\n  <header>\r\n    \r\n    <HeroPicture/>\r\n   \r\n    \r\n\r\n\r\n\r\n   \r\n \r\n\r\n   \r\n    \r\n   \r\n  </header>\r\n\r\n    \r\n</div>\r\n    )\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Nav, Navbar, Navlink } from 'react-bootstrap'\r\nimport './Body.css';\r\n\r\nexport default class NavBody extends Component {\r\n\r\nrender() {\r\n\r\n    return (\r\n\r\n  <div className=\"navbar-container hero\">\r\n    <header>\r\n    <Navbar  collapseOnSelect expand=\"lg\"  variant=\"dark\">\r\n      <Navbar.Brand href=\"#hero-container\"><img className=\"logo-image\" src=\"yuujin_web.png\"/></Navbar.Brand>\r\n      <Navbar.Toggle aria-controls=\"responsive-navbar-nav\" />\r\n    <Navbar.Collapse id=\"responsive-navbar-nav\">\r\n    <Nav >\r\n      \r\n      \r\n    </Nav>\r\n    <Nav>\r\n      <Nav.Link className=\"navbar-text\" href=\"#test\">CONTACT US</Nav.Link>\r\n      <Nav.Link className=\"navbar-text\" href=\"#test\">LOCATION</Nav.Link>\r\n      <Nav.Link className=\"navbar-text\" href=\"#test\">ABOUT US</Nav.Link>\r\n    </Nav>\r\n  </Navbar.Collapse>\r\n</Navbar>\r\n\r\n\r\n  </header>\r\n  </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React, { Component } from 'react'\r\nimport { Nav, Navbar, Navlink } from 'react-bootstrap'\r\nimport './Body.css';\r\nimport Fade from 'react-reveal/Fade';\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport default class Body extends Component {\r\n\r\nrender() {\r\n\r\n    return (\r\n\r\n  <div id=\"first-pic\">\r\n    <section className=\"flex-row-lg\">\r\n       <Fade left>\r\n      <div className=\"img-container\">\r\n        <img className=\"yuujin-image\" src=\"yuujin_sign.jpg\"/>\r\n      </div>\r\n      </Fade>\r\n      <Fade right>\r\n      <div className=\"test\">\r\n        <p>Experience authentic Japanese food in the heart of Little Baguio.</p>\r\n        <Button variant=\"outline-primary\">Browse Menu</Button>\r\n      </div>\r\n      </Fade>\r\n\r\n    </section>\r\n    \r\n\r\n  </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\n\r\n\r\n","import React from 'react';\nimport './App.css';\nimport Hero from './components/hero/Hero';\nimport Reveal from 'react-reveal/Reveal';\nimport Zoom from 'react-reveal/Zoom';\nimport Fade from 'react-reveal/Fade';\nimport NavBody from './components/body/NavBody';\nimport Body from './components/body/Body';\nimport Sticky from 'react-sticky-el';\n\n\nfunction App() {\n    var divStyle = {\n  color: 'white',\n  backgroundColor: 'var(--violet)'\n \n};\n  return (\n    <div className=\"App wrap\">\n     <Fade>\n      <div className=\"sticky-container\">\n        <Sticky style={divStyle} topOffset={500}>\n          <NavBody />\n        </Sticky>\n      </div>\n      \n      <Hero />\n      </Fade>\n      \n\n     \n      \n        <Body/>\n     \n      \n\n    \n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}